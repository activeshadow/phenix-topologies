apiVersion: 1

datasources:
  - name: logstash
    type: elasticsearch
    access: proxy
    database: '[logstash-]YYYY.MM.DD'
    url: http://weto-sceptre-dash-elasticsearch:9200
    uid: PEF04DE3072C5E4DD
    jsonData:
      esVersion: "7.10.0"
      includeFrozen: false
      logLevelField: ""
      logMessageField: ""
      interval: Daily
      timeField: '@timestamp'
  - name: bennu
    type: elasticsearch
    access: proxy
    database: '[bennu-]YYYY.MM.DD'
    url: http://weto-sceptre-dash-elasticsearch:9200
    uid: PEBC1D95F13C770DE
    jsonData:
      esVersion: "7.10.0"
      includeFrozen: false
      logLevelField: ""
      logMessageField: ""
      interval: Daily
      timeField: '@timestamp'
  - name: tests
    type: elasticsearch
    access: proxy
    database: '[tests-]YYYY.MM.DD'
    url: http://weto-sceptre-dash-elasticsearch:9200
    uid: PE5C9D7030BADA2FE
    jsonData:
      esVersion: "7.10.0"
      includeFrozen: false
      logLevelField: ""
      logMessageField: ""
      interval: Daily
      timeField: '@timestamp'
  - name: detections
    type: elasticsearch
    access: proxy
    database: 'detections'
    url: http://weto-sceptre-dash-elasticsearch:9200
    uid: P21F47EFF8DA6823A
    jsonData:
      esVersion: "7.10.0"
      includeFrozen: false
      logLevelField: ""
      logMessageField: ""
      interval: Daily
      timeField: '@timestamp'
  - name: wazuh-alerts
    type: elasticsearch
    access: proxy
    database: '[wazuh-alerts-3.x-]YYYY.MM.DD'
    url: http://weto-sceptre-dash-elasticsearch:9200
    uid: P45A1D828630779A3
    jsonData:
      esVersion: "7.10.0"
      includeFrozen: false
      logLevelField: ""
      logMessageField: ""
      interval: Daily
      timeField: '@timestamp'
  - name: wazuh-monitoring
    type: elasticsearch
    access: proxy
    database: '[wazuh-alerts-3.x-]YYYY.MM.DD'
    url: http://weto-sceptre-dash-elasticsearch:9200
    uid: TODO-wazuh-monitor
    jsonData:
      esVersion: "7.10.0"
      includeFrozen: false
      logLevelField: ""
      logMessageField: ""
      interval: Daily
      timeField: '@timestamp'


#https://grafana.com/docs/grafana/latest/administration/provisioning/#example-data-source-config-file
# Configuration file version
# apiVersion: 1
# # List of data sources to insert/update depending on what's
# # available in the database.
# datasources:
#   # <string, required> Sets the name you use to refer to
#   # the data source in panels and queries.
#   - name: Graphite
#     # <string, required> Sets the data source type.
#     type: graphite
#     # <string, required> Sets the access mode, either
#     # proxy or direct (Server or Browser in the UI).
#     # Some data sources are incompatible with any setting
#     # but proxy (Server).
#     access: proxy
#     # <int> Sets the organization id. Defaults to orgId 1.
#     orgId: 1
#     # <string> Sets a custom UID to reference this
#     # data source in other parts of the configuration.
#     # If not specified, Grafana generates one.
#     uid: my_unique_uid
#     # <string> Sets the data source's URL, including the
#     # port.
#     url: http://localhost:8080
#     # <string> Sets the database user, if necessary.
#     user:
#     # <string> Sets the database name, if necessary.
#     database:
#     # <bool> Enables basic authorization.
#     basicAuth:
#     # <string> Sets the basic authorization username.
#     basicAuthUser:
#     # <bool> Enables credential headers.
#     withCredentials:
#     # <bool> Toggles whether the data source is pre-selected
#     # for new panels. You can set only one default
#     # data source per organization.
#     isDefault:
#     # <map> Fields to convert to JSON and store in jsonData.
#     jsonData:
#       # <string> Defines the Graphite service's version.
#       graphiteVersion: '1.1'
#       # <bool> Enables TLS authentication using a client
#       # certificate configured in secureJsonData.
#       tlsAuth: true
#       # <bool> Enables TLS authentication using a CA
#       # certificate.
#       tlsAuthWithCACert: true
#     # <map> Fields to encrypt before storing in jsonData.
#     secureJsonData:
#       # <string> Defines the CA cert, client cert, and
#       # client key for encrypted authentication.
#       tlsCACert: '...'
#       tlsClientCert: '...'
#       tlsClientKey: '...'
#       # <string> Sets the database password, if necessary.
#       password:
#       # <string> Sets the basic authorization password.
#       basicAuthPassword:
#     version: 1
#     # <bool> Allows users to edit data sources from the
#     # Grafana UI.
#     editable: false
